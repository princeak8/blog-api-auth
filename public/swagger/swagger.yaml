swagger: "2.0"
info:
  description: "This is an API for the Authentication for the Blog App"
  version: "1.0.0"
  title: "Blog API Authentication"
host: "blog-api-auth.zizix6host.com"
basePath: "/api/v1"
tags:
- name: "auth"
  description: "Everything Authentication"
schemes:
- "https"
- "http"
paths:
  /login:
    post:
      tags:
      - "auth"
      summary: "Logs a user in"
      description: ""
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "email"
        in: "formData"
        description: "Email of the user"
        required: true
        type: "string"
      - name: "password"
        in: "formData"
        required: true
        type: "string"
      responses:
        "200":
          description: "Login successfull"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/User"
        "401":
          description: "Wrong email or Password"
          
  /refresh_token:
    post:
      tags:
      - "auth"
      summary: "refreshes the user token"
      description: ""
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      security:
      - jwt_token: []
      responses:
        "200":
          description: "successfull Operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/User"
        "500":
          description: "error occured while trying to perform this operation"
    
  /register:
    post:
      tags:
      - "auth"
      summary: "Registers a user"
      description: "Register a user after adding the user information"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "email"
        in: "formData"
        description: "Email of the user"
        required: true
        type: "string"
      - name: "password"
        in: "formData"
        required: true
        type: "string"
      - name: "name"
        in: "formData"
        required: true
        type: "string"
      - name: "about"
        in: "formData"
        required: false
        type: "string"
      responses:
        "200":
          description: "successful operation"
        "500":
          description: "error occured while trying to perform this operation"
          
  /validate_email_token:
    post:
      tags:
      - "auth"
      summary: "Validates the token sent to the user's email"
      description: "A token is sent to the user's email after successfull registeration, this token will be used to validate the user's email"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "token"
        in: "formData"
        description: "The token sent to the user's email"
        required: true
        type: "integer"
      - name: "email"
        in: "formData"
        description: "Email of the user"
        required: true
        type: "string"
      - name: "password"
        in: "formData"
        required: true
        type: "string"
      - name: "role_id"
        in: "formData"
        type: "integer"
        required: true
      responses:
        "200":
          description: "Token verified successfully"
        "402":
          description: "User Email is already verified"
        "422":
          description: "Validation was unsuccessfull"
        "500":
          description: "error occured while trying to perform this operation"
  
  /resend_email_token:
    get:
      tags:
      - "auth"
      summary: "Resend Email Token"
      description: "Resends email token to user's email"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      responses:
        "200":
          description: "Token Resent Successfully"
        "402":
          description: "User Email is already verified/token already generated"
        "500":
          description: "error occured while trying to perform this operation"
          
  /forgot_password:
    post:
      tags:
      - "auth"
      summary: "sends email and role_id and a reset code is sent to the email if valid"
      description: "sends email and role_id in order to retrieve forgotten password"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "email"
        in: "formData"
        description: "Email of the user"
        required: true
        type: "string"
      responses:
        "200":
          description: "password reset code successfully sent to email"
        "401":
          description: "Incorrect email"
        "500":
          description: "An error occured while attempting to perform operation"
          
  /verify_token:
    post:
      tags:
      - "auth"
      summary: "verifies whether the code sent is valid and returns a token that the developer will send along with the new password"
      description: "The user enters the code sent to him/her into a form input field and sends to this endpoint, the endpoint verifies that the code is valid and if its valid, it returns a token, which the developer will send along with the new password that the user enters"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "code"
        in: "formData"
        description: "verification code"
        required: true
        type: "string"
      responses:
        "200":
          description: "Code verified successfully"
        "422":
          description: "Code could not be verified"
        "500":
          description: "An error occured while attempting to perform operation"
          
  /new_password:
    post:
      tags:
      - "auth"
      summary: "changes the old password with a new password"
      description: "Accepts a new password with the reset token sent along with the new password"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "password"
        in: "formData"
        required: true
        type: "string"
        description: "New Password"
      - name: "token"
        in: "formData"
        description: "reset token"
        required: true
        type: "string"
      responses:
        "200":
          description: "Code verified successfully"
        "422":
          description: "wrong token"
        "500":
          description: "An error occured while attempting to perform operation"
          
  
  
securityDefinitions:
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
  jwt_token:
    type: "apiKey"
    name: "Bearer Token"
    in: "header"
definitions:
  UserLogin:
    type: "object"
    properties:
      email:
        type: "string"
        format: "email"
        example: "abc@gmail.com"
      password:
        type: "string"
      role_id:
        type: "integer"
        format: "int32"
        
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      email:
        type: "string"
        format: "email"
        example: "abc@gmail.com"
      domain:
        type: "string"
        example: "blog"

  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      data:
        type: "object"
      message:
        type: "string"